{"ast":null,"code":"var _jsxFileName = \"/home/ac/Development/Code/Flatiron/Phase-3/Task-Tracker/task-tracker-client/task-tracker/src/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    addNewUser,\n    loggedIn,\n    setloggedIn,\n    currentUser,\n    usersArr,\n    setUsersArr,\n    setCurrentUser\n  } = _ref;\n  const [userName, setUserName] = useState(\"\");\n  const tasks = [];\n\n  function handleDeleteUser(id) {\n    fetch(`http://localhost:9292/users/${id}`, {\n      method: \"DELETE\"\n    }).then(r => r.json()).then(() => {\n      const updatedUsersArr = usersArr.filter(user => user.id !== id);\n      setUsersArr(updatedUsersArr);\n    });\n  }\n\n  function createNewUser(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:9292/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: userName,\n        tasks: tasks\n      })\n    }).then(r => r.json()).then(newUser => {\n      setCurrentUser(newUser);\n      addNewUser(newUser);\n    });\n    setUserName(\"\");\n  } // const displayUsers = usersArr.map((users) => (\n  //   <option value={users.username} key={users.username}>\n  //     {users.username}\n  //   </option>\n  // ));\n\n\n  console.log(currentUser);\n\n  function selectUser(e) {\n    setCurrentUser(usersArr.find(users => {\n      if (e.target.value === users.username) {\n        return users;\n      }\n    }));\n    setloggedIn(true);\n  }\n\n  function toggleLogin() {\n    if (loggedIn === false) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"createUserName\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: createNewUser,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputName\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"enter name here\",\n                  value: userName,\n                  onChange: e => setUserName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Sign In\", /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => selectUser(e),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Select User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), usersArr.map(users => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: users.username,\n                children: users.username\n              }, users.username, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"logOut\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setUsersArr(usersArr);\n            setloggedIn(false);\n          },\n          children: \"Log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.preventDefault();\n            handleDeleteUser(currentUser.id);\n            setloggedIn(false);\n          },\n          children: \"delete user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Welcome \", currentUser.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return toggleLogin();\n}\n\n_s(Login, \"VQZHmxCtsQ0nwV2XLUQawwUQN54=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/ac/Development/Code/Flatiron/Phase-3/Task-Tracker/task-tracker-client/task-tracker/src/Components/Login.js"],"names":["React","useState","useEffect","Login","addNewUser","loggedIn","setloggedIn","currentUser","usersArr","setUsersArr","setCurrentUser","userName","setUserName","tasks","handleDeleteUser","id","fetch","method","then","r","json","updatedUsersArr","filter","user","createNewUser","e","preventDefault","headers","body","JSON","stringify","username","newUser","console","log","selectUser","find","users","target","value","toggleLogin","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Login({\n  addNewUser,\n  loggedIn,\n  setloggedIn,\n  currentUser,\n  usersArr,\n  setUsersArr,\n  setCurrentUser,\n}) {\n  const [userName, setUserName] = useState(\"\");\n  const tasks = [];\n\n  function handleDeleteUser(id) {\n    fetch(`http://localhost:9292/users/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((r) => r.json())\n      .then(() => {\n        const updatedUsersArr = usersArr.filter((user) => user.id !== id);\n        setUsersArr(updatedUsersArr);\n      });\n  }\n\n  function createNewUser(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:9292/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: userName,\n        tasks: tasks,\n      }),\n    })\n      .then((r) => r.json())\n      .then((newUser) => {\n        setCurrentUser(newUser);\n        addNewUser(newUser);\n      });\n    setUserName(\"\");\n  }\n\n  // const displayUsers = usersArr.map((users) => (\n  //   <option value={users.username} key={users.username}>\n  //     {users.username}\n  //   </option>\n  // ));\n\n  console.log(currentUser);\n\n  function selectUser(e) {\n    setCurrentUser(\n      usersArr.find((users) => {\n        if (e.target.value === users.username) {\n          return users;\n        }\n      })\n    );\n    setloggedIn(true);\n  }\n\n  function toggleLogin() {\n    if (loggedIn === false) {\n      return (\n        <div id=\"createUserName\">\n          <div>\n            <form onSubmit={createNewUser}>\n              <div className=\"inputName\">\n                <label htmlFor=\"name\">\n                  Username\n                  <input\n                    type=\"text\"\n                    placeholder={\"enter name here\"}\n                    value={userName}\n                    onChange={(e) => setUserName(e.target.value)}\n                  ></input>\n                </label>\n              </div>\n              <input type=\"submit\" value=\"Create\"></input>\n            </form>\n          </div>\n          <div>\n            <label>\n              Sign In\n              <select onChange={(e) => selectUser(e)}>\n                <option>Select User</option>\n                {usersArr.map((users) => (\n                  <option value={users.username} key={users.username}>\n                    {users.username}\n                  </option>\n                ))}\n              </select>\n            </label>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div id=\"logOut\">\n          <button\n            onClick={() => {\n              setUsersArr(usersArr);\n              setloggedIn(false);\n            }}\n          >\n            Log out\n          </button>\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              handleDeleteUser(currentUser.id);\n              setloggedIn(false);\n            }}\n          >\n            delete user\n          </button>\n          <h2>Welcome {currentUser.username}</h2>\n        </div>\n      );\n    }\n  }\n\n  return toggleLogin();\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}