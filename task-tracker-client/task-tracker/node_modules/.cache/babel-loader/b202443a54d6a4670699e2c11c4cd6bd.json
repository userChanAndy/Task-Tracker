{"ast":null,"code":"var _jsxFileName = \"/home/ac/Development/Code/Flatiron/Phase-3/Task-Tracker/task-tracker-client/task-tracker/src/Components/TaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskForm(_ref) {\n  _s();\n\n  let {\n    addNewTask,\n    currentUser,\n    isComplete,\n    setIsComplete\n  } = _ref;\n  const [task, setTask] = useState(\"\");\n\n  function createNewTask() {\n    fetch(\"http://localhost:9292/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        task: task,\n        user_id: currentUser.id,\n        complete: isComplete\n      })\n    }).then(r => r.json()).then(newTask => addNewTask(newTask));\n    setTask(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      createNewTask();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"tasks\",\n      children: [\"Tasks\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter tasks here\",\n        value: task,\n        onChange: e => setTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskForm, \"68Y0odjr5YYZ1eMe5aWHrdIJ63Q=\");\n\n_c = TaskForm;\nexport default TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"sources":["/home/ac/Development/Code/Flatiron/Phase-3/Task-Tracker/task-tracker-client/task-tracker/src/Components/TaskForm.js"],"names":["React","useState","TaskForm","addNewTask","currentUser","isComplete","setIsComplete","task","setTask","createNewTask","fetch","method","headers","body","JSON","stringify","user_id","id","complete","then","r","json","newTask","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,OAA0E;AAAA;;AAAA,MAAxD;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,WAAd;AAA2BC,IAAAA,UAA3B;AAAuCC,IAAAA;AAAvC,GAAwD;AACxE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AACA,WAASQ,aAAT,GAAyB;AACvBC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF0B;AAKnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,QAAAA,IAAI,EAAEA,IADa;AAEnBS,QAAAA,OAAO,EAAEZ,WAAW,CAACa,EAFF;AAGnBC,QAAAA,QAAQ,EAAEb;AAHS,OAAf;AAL6B,KAAhC,CAAL,CAWGc,IAXH,CAWSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAXf,EAYGF,IAZH,CAYSG,OAAD,IAAanB,UAAU,CAACmB,OAAD,CAZ/B;AAaAd,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AACD,sBACE;AACE,IAAA,QAAQ,EAAGe,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACC,cAAF;AACAf,MAAAA,aAAa;AACd,KAJH;AAAA,2BAME;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA,uCAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,kBAFd;AAGE,QAAA,KAAK,EAAEF,IAHT;AAIE,QAAA,QAAQ,EAAGgB,CAAD,IAAOf,OAAO,CAACe,CAAC,CAACE,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GArCQxB,Q;;KAAAA,Q;AAuCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction TaskForm({ addNewTask, currentUser, isComplete, setIsComplete }) {\n  const [task, setTask] = useState(\"\");\n  function createNewTask() {\n    fetch(\"http://localhost:9292/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        task: task,\n        user_id: currentUser.id,\n        complete: isComplete,\n      }),\n    })\n      .then((r) => r.json())\n      .then((newTask) => addNewTask(newTask));\n    setTask(\"\");\n  }\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        createNewTask();\n      }}\n    >\n      <label htmlFor=\"tasks\">\n        Tasks\n        <input\n          type=\"text\"\n          placeholder=\"enter tasks here\"\n          value={task}\n          onChange={(e) => setTask(e.target.value)}\n        ></input>\n        <input type=\"submit\"></input>\n      </label>\n    </form>\n  );\n}\n\nexport default TaskForm;\n"]},"metadata":{},"sourceType":"module"}